{"name":"Datavisualization","tagline":"DataVisualization","body":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n  <meta charset=\"utf-8\">\r\n  <script src=\"http://d3js.org/d3.v3.min.js\"></script>\r\n  <script src=\"http://dimplejs.org/dist/dimple.v2.0.0.min.js\"></script>\r\n    <script type=\"text/javascript\">\r\n      function draw(data) {\r\n      /*\r\n        D3.js setup code\r\n        Storyboard and bubble code from http://dimplejs.org/advanced_examples_viewer.html?id=advanced_storyboard_control\r\n      */\r\n        \"use strict\";\r\n        var margin = 75,\r\n            width = 1400 - margin,\r\n            height = 600 - margin;\r\n        var svg = dimple.newSvg(\"body\", 1250, 580);\r\n          // Filter for 1 year\r\n//        data1 = dimple.filterData(data, \"Pclass\");\r\n          // Create the indicator chart on the right of the main chart\r\n          var indicator = new dimple.chart(svg, data);\r\n          // Pick blue as the default and orange for the selected month\r\n          var defaultColor = indicator.defaultColors[0];\r\n          var indicatorColor = indicator.defaultColors[2];\r\n          // The frame duration for the animation in milliseconds\r\n          var frame = 3500;\r\n          var firstTick = true;\r\n          // Place the indicator bar chart to the right\r\n          indicator.setBounds(1050, 80, 153, 150);\r\n          // Add dates along the y axis\r\n          var y = indicator.addCategoryAxis(\"y\", \"EmbarkCountry\");\r\n          y.addOrderRule([\"UK\", \"France\", \"Ireland\", \"Unknown\"]);\r\n          // Use sales for bar size and hide the axis\r\n          var x = indicator.addMeasureAxis(\"x\", \"AgeCat\");\r\n          x.hidden = true;\r\n          // Add the bars to the indicator and add event handlers\r\n          var s = indicator.addSeries(null, dimple.plot.bar);\r\n          s.addEventHandler(\"click\", onClick);\r\n          // Draw the side chart\r\n          indicator.draw();\r\n          // Remove the title from the y axis\r\n          y.titleShape.remove();\r\n          // Remove the lines from the y axis\r\n          y.shapes.selectAll(\"line,path\").remove();\r\n          // Move the y axis text inside the plot area\r\n          y.shapes.selectAll(\"text\")\r\n                  .style(\"text-anchor\", \"start\")\r\n                  .style(\"font-size\", \"11px\")\r\n                  .attr(\"transform\", \"translate(18, 0.5)\");\r\n          // This block simply adds the legend title. I put it into a d3 data\r\n          // object to split it onto 2 lines.  This technique works with any\r\n          // number of lines, it isn't dimple specific.\r\n          svg.selectAll(\"title_text\")\r\n                  .data([\"Click bar to select and pause\",\r\n                      \"Click again to resume animation\"])\r\n                  .enter()\r\n                  .append(\"text\")\r\n                  .attr(\"x\", 1050)\r\n                  .attr(\"y\", function (d, i) { return 15 + i * 12; })\r\n                  .style(\"font-family\", \"sans-serif\")\r\n                  .style(\"font-size\", \"12px\")\r\n                  .style(\"color\", \"Black\")\r\n                  .text(function (d) { return d; });\r\n          // Manually set the bar colors\r\n          s.shapes\r\n                  .attr(\"rx\", 10)\r\n                  .attr(\"ry\", 10)\r\n                  .style(\"fill\", function (d) { return (d.y === 'Jan-12' ? indicatorColor.fill : defaultColor.fill) })\r\n                  .style(\"stroke\", function (d) { return (d.y === 'Jan-12' ? indicatorColor.stroke : defaultColor.stroke) })\r\n                  .style(\"opacity\", 0.4);\r\n          // Draw the main chart\r\n          var bubbles = new dimple.chart(svg, data);\r\n          bubbles.setBounds(100, 120, 850, 400)\r\n          var xb = bubbles.addCategoryAxis(\"x\", \"Sex\");\r\n          var yb = bubbles.addMeasureAxis(\"y\", \"Survived\");\r\n          yb.overrideMax = 80;\r\n//          var z = bubbles.addMeasureAxis(\"z\", \"Sex\");\r\n//          z.overrideMin = .1;\r\n//          z.overrideMax = .2;\r\n          var bb = bubbles.addSeries([\"Pclass\", \"AgeCat\"], dimple.plot.bubble);\r\n          bb.addOrderRule([\"Children\", \"Youth\",\"Middle Aged\", \"Senior\", \"No Data\"]);\r\n          bubbles.addLegend(120, 40, 510, 600);\r\n//          bubbles.addLegend(1050, 300, 100, 100, \"left\", z);\r\n          svg.selectAll(\"title_text\")\r\n          .data([\"Age groups of the Passengers in Titanic.\"])\r\n          .enter()\r\n          .append(\"text\")\r\n          .attr(\"x\", 120)\r\n          .attr(\"y\", 30)\r\n          .style(\"font-family\", \"sans-serif\")\r\n          .style(\"font-size\", \"10px\")\r\n          .style(\"color\", \"Black\")\r\n          .text(function (d) { return d; });\r\n          // Add a storyboard to the main chart and set the tick event\r\n          var story = bubbles.setStoryboard(\"EmbarkCountry\", onTick);\r\n          // Change the frame duration\r\n          story.frameDuration = frame;\r\n          // Order the storyboard by date\r\n          story.addOrderRule([\"UK\", \"France\", \"Ireland\", \"Unknown\"]);\r\n          // Draw the bubble chart\r\n          bubbles.draw();\r\n          // Orphan the legends as they are consistent but by default they\r\n          // will refresh on tick\r\n          bubbles.legends = [];\r\n          // Remove the storyboard label because the chart will indicate the\r\n          // current month instead of the label\r\n          story.storyLabel.remove();\r\n          // On click of the side chart\r\n          function onClick(e) {\r\n              // Pause the animation\r\n              story.pauseAnimation();\r\n              // If it is already selected resume the animation\r\n              // otherwise pause and move to the selected month\r\n              if (e.yValue === story.getFrameValue()) {\r\n                  story.startAnimation();\r\n              } else {\r\n                  story.goToFrame(e.yValue);\r\n                  story.pauseAnimation();\r\n              }\r\n          }\r\n          // On tick of the main charts storyboard\r\n          function onTick(e) {\r\n              if (!firstTick) {\r\n                  // Color all shapes the same\r\n                  s.shapes\r\n                          .transition()\r\n                          .duration(frame / 2)\r\n                          .style(\"fill\", function (d) { return (d.y === e ? indicatorColor.fill : defaultColor.fill) })\r\n                          .style(\"stroke\", function (d) { return (d.y === e ? indicatorColor.stroke : defaultColor.stroke) });\r\n              }\r\n              firstTick = false;\r\n          }\r\n        };\r\n      </script>\r\n  </head>\r\n<body>\r\n  <script type=\"text/javascript\">\r\n  /*\r\n    Use D3 (not dimple.js) to load the TSV file\r\n    and pass the contents of it to the draw function\r\n    */\r\n  d3.csv(\"train_w_age_cat.csv\", draw);\r\n  </script>\r\n</body>\r\n</html>","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}